#!/bin/bash

if [ "$1" != "" ]; then
  pattern="^https://github.com/([^/]+)/([^/]+)/pull/([0-9]+)"
  if [[ $1 =~ $pattern ]]; then
    pull=$1
    owner="${BASH_REMATCH[1]}"
    repo="${BASH_REMATCH[2]}"
    number="${BASH_REMATCH[3]}"
  else
    echo "Invalid URL"
    exit 1
  fi
else
  echo "Usage: $0"
  echo "  $0 <GitHub PR URL>"
  exit 1
fi

# Display the PR information
echo "---"
echo "gh pr view $pull"
echo "---"
gh pr view $pull  # Execute command to view the PR

# Display the diff of the PR
echo "---"
echo "gh pr diff $pull"
echo "---"
diff_output=$(gh pr diff $pull)  # Get the diff

# Create a temporary file
tmp_file=$(mktemp)

# Write diff_output to the temporary file
echo "$diff_output" > "$tmp_file"

# Use csplit to split the temporary file
csplit -z -f "$tmp_file" -b "%d.txt" "$tmp_file" '/^diff /' '{*}' > /dev/null

# Set thresholds
char_threshold=10000  # Character count threshold
line_length_threshold=1000  # Line length threshold

for file in "$tmp_file"*; do
  char_count=$(wc -m < "$file")  # Calculate character count
  longest_line=$(wc -L < "$file")  # Calculate the length of the longest line

  if [ "$char_count" -gt "$char_threshold" ] || [ "$longest_line" -gt "$line_length_threshold" ]; then
    echo \`\`\`diff
    head -n 1 "$file"
    echo "skipped"
    echo "large diff file (characters: $char_count, longest line: $longest_line characters)"
    echo \`\`\`

    rm "$file"  # Delete files that are too large
  else
    echo \`\`\`diff
    cat "$file"  # Display the contents of the file
    echo \`\`\`
    echo ""
  fi
done

# Delete the temporary files
rm "$tmp_file"*

# Display the comments of the PR
echo "---"
echo "gh pr view --comments $pull"
echo "---"
gh pr view --comments $pull  # Execute command to view comments on the PR

echo "---"
echo "gh pr view $pull --json number,title,body,reviews,assignees,commits --jq '{number, title, body, reviews, assignees,commits: [.commits[] | {messageHeadline: .messageHeadline, messageBody: .messageBody}], comments}'" 
echo "---"

gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$owner/$repo/pulls/$number/comments --jq '.[] | {path: .path, position: .position, body: .body, diff_hunk: .diff_hunk, commit_id: .commit_id}'
